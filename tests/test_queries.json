{
  "description": "Comprehensive test queries for Discord AI Agent covering all core capabilities",
  "created": "2025-06-09",
  "updated": "2025-06-12",
  "total_queries": 22,
  "capability_coverage": {
    "server_data_analysis": [1, 2, 3, 4, 5, 21],
    "feedback_summarization": [6, 7, 8],
    "trending_topics": [9, 10, 11],
    "qa_concepts": [12, 13, 14],
    "statistics_generation": [15, 16, 17],
    "server_structure_analysis": [18, 19, 20, 22]
  },
  "queries": [
    {
      "id": 1,
      "capability": "server_data_analysis",
      "query": "Analyze message activity patterns across all buddy groups in the last 30 days",
      "description": "Tests ability to analyze cross-channel data and identify patterns in group activities",
      "expected_elements": ["message counts", "activity distribution", "engagement levels", "buddy group comparison"],
      "target_audience": "community_managers"
    },
    {
      "id": 2,
      "capability": "server_data_analysis", 
      "query": "What are the most engaging discussion topics in the ü¶æagent-ops channel this week?",
      "description": "Tests analysis of technical discussions and engagement metrics",
      "expected_elements": ["topic identification", "engagement analysis", "technical content summary"],
      "target_audience": "technical_leads"
    },
    {
      "id": 3,
      "capability": "server_data_analysis",
      "query": "Show me conversation threads that generated the most responses and mentions in üèògeneral-chat",
      "description": "Tests thread analysis and response tracking capabilities",
      "expected_elements": ["thread identification", "response counts", "mention analysis", "conversation starters"],
      "target_audience": "conversation_leaders"
    },
    {
      "id": 4,
      "capability": "server_data_analysis",
      "query": "Identify users who are most active in sharing resources and links across all channels",
      "description": "Tests user behavior analysis and resource sharing patterns",
      "expected_elements": ["user identification", "sharing frequency", "resource types", "cross-channel activity"],
      "target_audience": "community_managers"
    },
    {
      "id": 5,
      "capability": "server_data_analysis",
      "query": "Analyze the flow of information from announcements to community responses in the last week",
      "description": "Tests information flow analysis and community response tracking",
      "expected_elements": ["announcement identification", "response tracking", "information propagation", "community engagement"],
      "target_audience": "discord_managers"
    },
    {
      "id": 6,
      "capability": "feedback_summarization",
      "query": "Summarize all feedback and suggestions made about üõ†ai-practical-applications workshops",
      "description": "Tests feedback aggregation and workshop improvement insights",
      "expected_elements": ["feedback compilation", "workshop evaluation", "improvement suggestions", "participant sentiment"],
      "target_audience": "workshop_organizers"
    },
    {
      "id": 7,
      "capability": "feedback_summarization",
      "query": "Create a summary of member experiences and challenges shared in the ‚ùåüíªnon-coders-learning channel",
      "description": "Tests educational feedback summarization for learning programs",
      "expected_elements": ["learning challenges", "member experiences", "educational gaps", "success stories"],
      "target_audience": "educational_coordinators"
    },
    {
      "id": 8,
      "capability": "feedback_summarization",
      "query": "Summarize community feedback on Discord server structure and channel organization",
      "description": "Tests server improvement feedback analysis",
      "expected_elements": ["structure feedback", "channel suggestions", "navigation issues", "organizational improvements"],
      "target_audience": "discord_managers"
    },
    {
      "id": 9,
      "capability": "trending_topics",
      "query": "What practical AI implementation challenges are most discussed across channels this month?",
      "description": "Tests practical AI challenge identification and community problem tracking",
      "expected_elements": ["implementation challenges", "discussion frequency", "practical solutions", "community interest"],
      "target_audience": "community_managers"
    },
    {
      "id": 10,
      "capability": "trending_topics",
      "query": "Identify emerging collaboration patterns and project ideas mentioned across buddy groups",
      "description": "Tests collaborative trend analysis and project identification",
      "expected_elements": ["collaboration patterns", "project ideas", "group dynamics", "innovative concepts"],
      "target_audience": "collaboration_facilitators"
    },
    {
      "id": 11,
      "capability": "trending_topics",
      "query": "Analyze discussion themes in üèõnetarch-general and üìöai-philosophy-ethics channels",
      "description": "Tests content analysis in specialized channels with actual high activity",
      "expected_elements": ["content themes", "discussion patterns", "user participation", "topic evolution"],
      "target_audience": "technical_leads"
    },
    {
      "id": 12,
      "capability": "qa_concepts",
      "query": "Compile questions and answers about Gen AI Global community programs and onboarding",
      "description": "Tests Q&A extraction and knowledge compilation for community-specific topics",
      "expected_elements": ["question compilation", "community answers", "program concepts", "onboarding guidance"],
      "target_audience": "knowledge_managers"
    },
    {
      "id": 13,
      "capability": "qa_concepts",
      "query": "What are the most frequently asked questions about buddy group participation and collaboration?",
      "description": "Tests FAQ identification for community-specific collaboration patterns",
      "expected_elements": ["frequent questions", "buddy group concepts", "collaboration techniques", "common challenges"],
      "target_audience": "educational_coordinators"
    },
    {
      "id": 14,
      "capability": "qa_concepts",
      "query": "Extract questions and solutions shared about Discord community management and engagement strategies",
      "description": "Tests community-focused Q&A extraction relevant to your actual server",
      "expected_elements": ["community challenges", "management solutions", "engagement advice", "practical strategies"],
      "target_audience": "business_community"
    },
    {
      "id": 15,
      "capability": "statistics_generation",
      "query": "Generate engagement statistics for the top 10 most active channels over the past month",
      "description": "Tests comprehensive channel engagement analytics",
      "expected_elements": ["message counts", "user participation", "engagement rates", "activity trends"],
      "target_audience": "community_managers"
    },
    {
      "id": 16,
      "capability": "statistics_generation",
      "query": "Provide statistics on new member onboarding and introduction patterns",
      "description": "Tests new member analytics and onboarding effectiveness",
      "expected_elements": ["new member counts", "introduction patterns", "onboarding success", "retention indicators"],
      "target_audience": "growth_team"
    },
    {
      "id": 17,
      "capability": "statistics_generation",
      "query": "Calculate response patterns and interaction rates for questions posted in ‚ùìq-and-a-questions and üí¨questions-help channels",
      "description": "Tests support effectiveness and community responsiveness metrics",
      "expected_elements": ["response patterns", "interaction rates", "engagement statistics", "support quality"],
      "target_audience": "support_team"
    },
    {
      "id": 18,
      "capability": "server_structure_analysis",
      "query": "Analyze channel utilization and suggest which buddy groups might benefit from merging or splitting",
      "description": "Tests channel optimization and structural recommendations",
      "expected_elements": ["utilization analysis", "merge recommendations", "split suggestions", "optimal group sizes"],
      "target_audience": "discord_managers"
    },
    {
      "id": 19,
      "capability": "server_structure_analysis",
      "query": "Examine information flow between admin channels and general community channels to identify communication gaps",
      "description": "Tests communication flow analysis and identifies structural improvements",
      "expected_elements": ["information flow mapping", "communication gaps", "structural issues", "flow optimization"],
      "target_audience": "organizational_design"
    },
    {
      "id": 20,
      "capability": "server_structure_analysis",
      "query": "Recommend best practices for channel engagement based on analysis of most and least active channels",
      "description": "Tests engagement pattern analysis and best practice identification",
      "expected_elements": ["engagement patterns", "success factors", "best practices", "activation strategies"],
      "target_audience": "conversation_leaders"
    },
    {
      "id": 21,
      "capability": "server_data_analysis",
      "query": "Identify most active conversational leaders and analyze their engagement patterns across buddy groups",
      "description": "Tests community leadership analysis and cross-group activity tracking",
      "expected_elements": ["leader identification", "cross-group activity", "engagement metrics", "leadership patterns"],
      "target_audience": "community_managers"
    },
    {
      "id": 22,
      "capability": "server_structure_analysis",
      "query": "Analyze utilization patterns in üß¢buddy-group4 vs üí†buddy-group2 and suggest optimization strategies",
      "description": "Tests specific buddy group analysis using actual high-activity groups from database",
      "expected_elements": ["utilization comparison", "activity patterns", "optimization suggestions", "group dynamics"],
      "target_audience": "discord_managers"
    }
  ],
  "usage_instructions": {
    "testing": "Use these queries to validate agent capabilities across all core functions",
    "benchmarking": "Measure response quality, accuracy, and completeness for each capability area",
    "development": "Identify areas needing improvement based on query performance",
    "community_value": "Queries designed to provide actionable insights for community management"
  },
  "success_criteria": {
    "accuracy": "Responses should be factually correct based on actual Discord data",
    "completeness": "All expected elements should be addressed in responses",
    "actionability": "Insights should be practical and implementable by target audiences",
    "relevance": "Responses should directly address the specific community context"
  }
}
